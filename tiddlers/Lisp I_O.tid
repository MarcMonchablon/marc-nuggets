created: 20141006171139028
modified: 20141022123741492
tags: Lisp
title: Lisp I/O
type: text/vnd.tiddlywiki

; read
: Read user input, //Derp !// Also potentially dangerous (along with ''eval'' because user can do bad stuff throught this function by using //reader macros//.

; print
: Print stuff, //Duh !//

; prin1
: Same as ''print'', excepted that it doesn't add newline or space at the end of the printed output. Because that make it more flexible, it is commonly used in serious Lisp code (don't be fooled by the name !)

; princ
: Same as ''print'', but more human-readable. The drawback is that princ'ed stuff cannot be trivially reverted to it's original data structure.

; with-open-file
: Write information in a file
: `(with-open-file (my-stream`
: `		   "textFile.txt"`
: `		   :direction :output`
: `		   :if-exists :supersede)`
: `		  (princ "Hello File!" my-stream))`
: -> A new file 'textFile.txt' in current directory containing the text "Hello File!" (without the quotes).

''with-open-file'' create a //stream//. Functions like ''princ'' car accept a //stream// as optional parameter. In this case, theses printing functions won't print anything to the console, but instead will print to the stream object.
