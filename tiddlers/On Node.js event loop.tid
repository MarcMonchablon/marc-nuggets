created: 20141004151923733
modified: 20141004153409995
tags: Node.js
title: On Node.js event loop
type: text/vnd.tiddlywiki

Node asynchronous event loop is an implementation of the //Reactor Pattern//.

There are two things that can block the event loop :

* Synchronous I/O
* Big loops

// __Note__: Some function in Node API are synchronous (for instance, file operation). They always terminate in ''Sync'' (eg: fs.readFileSync).
@@color:red;
They should be used only when initializing !!
@@//

One function that is synchronous yet doesn't end with 'Sync' is the ''require'' function.

@@color:red;
//__Raptor pro-tip__: Don't put a ''require'' in a callback !//
@@

---
!! Example of code that block the event loop :

```
var open = false;

setTimeout(function() {
	open = true;
}, 1000);

while(!open) {
	// wait
}

console.log('opened !'); // Actually never called
```
What happend ? //open// is in fact never set to //true// : Node will never execute the timeout callback because the event loop is stuck in the //while// loop !