created: 20140922231432798
modified: 20141004102147995
tags: Lisp
title: Control Flow in Lisp
type: text/vnd.tiddlywiki

; Empty equal false
: `nil`, `()`, ```nil`` and ```()`` all evaluate to ''false''.
: Everything else evaluate to ''true''

; cond
: ''cond'' is the classic way to do branching in lisp.
: (and the one true lisp conditional for some lisp programmer).
: `(cond ((condition_1) (do stuff) (do another stuff)`
: `       (condition_2) (do completely different stuff)`
: `       (t  (do stuff by default)`

; if
: >``(if (= (+ 1 2) 3) `yup `nope)
YUP``
: // Note : ''if'' isn't just a function, it's a ''special form'' ! It mean that only one branch will be evaluated.//
: //Thus stuff like// ``(if (oddp 5) `odd-number (/ 1 0))``
: //won't return error.//